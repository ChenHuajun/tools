#!/bin/bash

# make bash behave
set -euo pipefail
IFS=$'\n\t'

# constants
stderr=2
badusage=64

latestpg="9.5"
pkgflavor="${TRAVIS_BRANCH%%-*}"
pkgauth="${PACKAGECLOUD_API_TOKEN}:"
projname="${TRAVIS_BRANCH##*-}"
repotype="enterprise"

case "${projname}" in
    citus)
        hubproj='citus'
        pkgbase="${hubproj}"
        repotype='community'
        ;;
    enterprise)
        hubproj='citus-enterprise'
        pkgbase="${hubproj}"
        ;;
    hll)
        hubproj='postgresql-hll'
        pkgbase='hll'
        repotype='community'
        ;;
    rebalancer)
        hubproj='shard_rebalancer'
        pkgbase='citus-rebalancer'
        ;;
    *)
        echo "$0: unknown project -- ${projname}" >&2
        usage $stderr $badusage
        ;;
esac

case "${pkgflavor}" in
    debian)
        pkgflavor='deb'
        pkgname="postgresql-${latestpg}-${pkgbase}"
        pkgarch="amd64"
        jqfilter='map(.version + "-" + .release)'
        ;;
    redhat)
        pkgflavor='rpm'
        pkgname="${pkgbase}_${latestpg//./}"
        pkgarch="x86_64"
        jqfilter='map(.version + "-" + .release | gsub("\\.centos$";"") | gsub("\\.[^.]*$";""))'
        ;;
    *)
        echo "$0: unknown package flavor -- ${pkgflavor}" >&2
        usage $stderr $badusage
        ;;
esac

pkgapiurl="https://packagecloud.io/api/v1/repos/citusdata/${repotype}"
pkgapiurl+="/package/${pkgflavor}/${TARGET_PLATFORM}/${pkgname}/${pkgarch}/versions.json"

fetch_build_files "${projname}" "${pkgflavor}" .
lastrelease=$(parse_latest_release "${projname}" "${pkgflavor}" .)
needrelease=$(curl -sf -u "${pkgauth}" "${pkgapiurl}?per_page=1000" | \
              jq -r "${jqfilter} | index(\"${lastrelease}\") < 0")

if [ "${needrelease}" == "true" ]; then
    mkdir releases && cd releases
    citus_package -p "${TARGET_PLATFORM}" "${projname}" release
    cd ..
else
    echo 'release up to date'
fi
